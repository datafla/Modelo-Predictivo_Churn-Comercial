{"title":"ANÁLISIS: 'Relacion entre factores de contactabilidad y 'Churn Comercial'","markdown":{"yaml":{"title":"ANÁLISIS: 'Relacion entre factores de contactabilidad y 'Churn Comercial'","author":"Flavia Davila","format":{"html":{"code-fold":true,"df-print":"kable","embed-resources":true}},"editor":"visual","self-contained":true,"lang":"es","execute":{"echo":false}},"headingText":"import CSV to DataFrame","containsRefs":false,"markdown":"\n\n```{python}\n#| include: false\nimport os\nimport pandas as pd\nfrom datetime import datetime, timedelta\nimport plotly.express as px\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport ipywidgets as widgets\nfrom IPython.display import display\nimport plotly.graph_objects as go\n```\n\n```{python}\n#| include: false\npastel_colors = [\n    'rgba(17, 98, 218, 0.76)', \n    'rgba(250, 120, 180, 0.9)', \n    'rgba(100, 200, 150, 0.9)',\n    'rgba(250, 250, 150, 0.9)',\n    'rgba(240, 150, 120, 0.9)'\n]\n\n```\n\n```{python}\n#| include: false\ndf_com = pd.read_csv(r'..\\data\\output_silver\\contact_metrics_com.csv')\ndf_exp = pd.read_csv(r'..\\data\\output_silver\\contact_metrics_exp.csv')\ndf = pd.read_csv(r'..\\data\\output_silver\\contact_metrics.csv')\n```\n\nSe plantea la hipótesis de que los patrones de contacto durante la etapa comercial podrían ser indicadores clave para predecir el \"Churn Comercial\" observado en la etapa de Experiencia.\n\nPara analizar esta idea, se ha examinado la información histórica de las actividades asociadas a todos los negocios ganados en la etapa comercial.\n\n## Datos Utilizados\n\nSe han utilizado los siguientes datos obtenidos del CRM Pipedrive:\\\n- Embudo Comercial: todas las actividades y todos los deals creados a partir de Enero del 2021 a la fecha, solo se consideraron los datos del embudo de Leads Calientes y en Estado 'Ganado'.\\\n- Embudo Experiencia: todas las actividades y todos los deals creados a partir de Enero del 2021 a la fecha, se consideraron los embudos 'Experiencia' y 'Churn'.\\\n\\\n**A partir de abril de 2024, se empezaron a considerar las etapas R1 y R2 en lugar de una única etapa denominada \"Reunión\". Cabe destacar que, para el periodo comprendido entre enero de 2021 y abril de 2024, la etapa única \"Reunión\" fue asociada retrospectivamente a la etapa R2.**\n\n## Caracteristicas de los Leads Ganados\n\n```{python}\n#| include: false\nint_columns_com = [\n    'Total_Actividades_x', \n    'Total_Llamadas_x', \n    'Llamadas_Sin_Avance', \n    'Llamadas_Efectivas_x', \n    'Llamadas_No_Efectivas_x', \n    'WA_Seguimiento_x', \n    'Total_Reuniones_x', \n    'Reuniones_Hechas_x', \n    'Reuniones_Canceladas_x', \n    #'New Categories'\n]\n\n\nfloat_columns_com = [\n    'Tiempo Negocio creado el-Primer Contacto (min)', \n    'Tiempo Negocio creado el-Fecha de ganado (días)', \n    'Tiempo Primer Contacto-Fecha de ganado (días)', \n    'Tiempo Primer Contacto-R1 1 (hr)', \n    'Tiempo R1 1-Segunda Reunión (días)'\n]\n\n```\n\n## Caracteristicas de las Actividades: Etapa Comercial\n\n#### Contexto\n\nLas acciones dentro de la Embudo Comercial corresponden a la siguiente lista de Etapas y Actividades:\\\n**R1:** Primera Reunión (siempre son de manera online, pueden ser Canceladas)\\\n**R2:** Segunda Reunión (pueden ser: in (insitu), out (fuera de oficinas), online)\\\n**Seguimiento**\\\n**Cierre**\\\nLas actividades entre Etapas comprenden las siguientes:\\\n**Llamadas de Prospeccion:** se considera el primero contacto Efectivas y No Efectivas\\\n**Llamadas de Seguimiento:** pueden ser Efectivas y No Efectivas\\\n**Llamadas Sin Avance** pueden ser contestadas o no, son llamadas de las que no se ha obtenido informacion de valor **Seguimiento wsp**  **video wsp**\\\n\n\n```{python}\ndf[int_columns_com].describe().T\n```\n\nSe puede observar \n\n```{python}\nfig = px.histogram(\n    df, \n    x='Total_Actividades_x',\n    title=f'Distribución del Total de Actividades',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 35 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Actividades',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n\n```\n\nLa mayoría de las actividades realizadas con los Leads ganados oscila entre 6 y 11, lo que sugiere que, en promedio, un Lead suele convertirse en \"ganado\" tras completar al menos 6 actividades, que incluyen llamadas, reuniones y seguimientos por WhatsApp.\n\nLa distribución presenta un sesgo positivo, indicando que la conversión generalmente ocurre entre 0 y 17 actividades. Aunque en algunos casos se requieran más interacciones, estos son menos frecuentes.\n\n```{python}\nfig = px.histogram(\n    df, \n    x='Total_Llamadas_x',\n    title=f'Distribución del Total de Llamadas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 25 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Actividades',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nLa mayoría de las Llamadas realizadas, con los Leads ganados oscila entre 2 y 3 llamadas, lo que sugiere que, en promedio, un Lead suele convertirse en \"ganado\" tras completar al menos 2 llamadas, ya sean de prospeccion o de seguimiento a lo largo de todo el proceso en la etapa comercial. \n\nLa distribución presenta un sesgo positivo, indicando que la conversión generalmente ocurre entre 0 y 15 actividades. Aunque en algunos casos se requieran más llamadas.\n\n__Esta visualizacion incluye el total de actividades categorizadas como llamadas ya sean efectivas o no.__\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_Sin_Avance',\n    title=f'Distribución de Llamadas Sin Avance',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)']\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nLa categoría de llamadas sin avance representa una proporción muy baja en los datos, lo que sugiere que no se utiliza con frecuencia al registrar información en el CRM. Esto podría deberse a la dificultad de diferenciar entre una llamada sin avance y una no efectiva, por lo que sería conveniente considerar ambas como llamadas no efectivas.\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_Efectivas_x',\n    title=f'Distribución de Llamadas Efectivas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins=25\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n\n```\n\nLa mayoría de las llamadas efectivas realizadas con los Leads ganados oscilan entre 1 y 4 llamadas, lo que sugiere que un Lead tiene mayores probabilidades de convertirse en \"ganado\" tras completar al menos 1 llamada efectiva, ya sea de prospección o de seguimiento a lo largo de todo el proceso en la etapa comercial.\n\nLa distribución presenta un sesgo positivo, indicando que la conversión generalmente ocurre con entre 1 y 4 llamadas efectivas. Aunque en algunos casos se requieren más llamadas, la tendencia general es que un Lead ganado no necesite muchas Llamadas efectivas para poder concretarse como 'ganado'.\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_No_Efectivas_x',\n    title=f'Distribución de Llamadas No Efectivas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 40 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nLa mayoría de las llamadas no efectivas realizadas con los Leads ganados oscilan entre 0 y 1 llamada, lo que sugiere que un Lead 'ganado' rara vez tiene llamadas no efectivas, ya sea de prospección o de seguimiento, a lo largo de todo el proceso en la etapa comercial. Sin embargo, existen casos excepcionales en los que es necesario realizar una \"persecución\" de los Leads para poder convertirlos.\n\nLa distribución presenta un sesgo positivo, lo que indica que la conversión generalmente ocurre con 1 o ninguna llamada no efectiva. Aunque en algunos casos se presentan más llamadas no efectivas, la tendencia general es que un Lead ganado no requiera muchas interacciones fallidas para convertirse en una venta.\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'WA_Seguimiento_x',\n    title=f'Distribución de Seguimiento por WA',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 24\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Mensajes',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nSe observa que los seguimientos realizados por WhatsApp oscilan entre 2 y 5 interacciones, lo que nos muestra que se necesitan al menos 2 seguimientos por whats app a lo largo de todo el proceso en la etapa comercial para poder tener mas oportunidades de considerarlo como ganado.\n\nLa distribución presenta un sesgo positivo, indicando que la conversión generalmente ocurre con entre 2 y 5 interacciones por whatsapp. Aunque en algunos casos se requieren más interacciones, la tendencia general es que un Lead ganado no necesite muchas interacciones por whats app para poder concretarse como 'ganado'.\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Total_Reuniones_x',\n    title=f'Distribución de Total Reuniones R1 - R2',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 10 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Reuniones_Hechas_x',\n    title=f'Distribución de Reuniones Hechas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    #nbins=15 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nLa mayoría de las reuniones marcadas como hechas con los Leads ganados oscilan entre 1 y 2 reuniones, lo que sugiere que un Lead tiene mayores oportunidades de convertirse en \"ganado\" tras completar hasta 2 reuniónes durante el proceso comercial. \nEsto puede deberse a la nueva clasificacion de actividades dentro ed la etapa comercial, dividida entre R1 y R2, lo que hace que exista una tendencia de buscar las 2 reuniones hechas.\n\nSin embargo, se observa una cantidad considerable de casos en los que los Leads han sido considerados como ganados sin la necesidad de haber realizado ninguna reunión en la etapa comercial.\n\nLa distribución muestra un sesgo negativo, indicando que la conversión generalmente ocurre con entre 0 y 2 reuniones hechas. Aunque existen casos excepcionales en los que se han realizado hasta 3 reuniones, la tendencia general es que un Lead ganado no requiere mas de 2 reuniones para ser 'ganado'.\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Reuniones_Canceladas_x',\n    title=f'Distribución de Reuniones Canceladas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'] \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\nLa mayoria de Leads ganados no cancela las reuniones que tiene agendadas, marcando 0 reuniones canceladas la mayoria de ocurrencias, \n\nLa distribución muestra un sesgo negativo muy marcado, indicando que la conversión generalmente ocurre con 0 reuniones Reuniones Canceladas. Aunque existen casos excepcionales en los que se han cancelado de 1 a 2 reuniones, la tendencia general es que un Lead ganado en su mayoria no cancela las reuniones para convertirse a 'ganado'.\n\n## Caracteristicas de las Actividades: Etapa Experiencia\n\n#### Contexto\n\nLas acciones dentro del **Embudo de Experiencia** corresponden a las siguientes **Etapas** y **Actividades**:\n\n### Etapas:\n\n-   **Contacto Inicial**: Primer contacto con el Lead Ganado, usualmente en una reunión de **Kick Off**.\n-   **Onboarding**: Etapa en la que el Lead recibe capacitación sobre el uso del sistema.\n-   **Sin Adopción**: Cuando el Lead aún no ha adoptado el uso del sistema.\n-   **Adopción**: Cuando el Lead ha comenzado a usar el sistema de manera efectiva.\n\n### Actividades entre Etapas:\n\n-   **Kick Off**: Primer contacto con el Lead ganado, generalmente realizado de manera online (puede ser cancelado).\n-   **Llamadas de Seguimiento**: Pueden ser efectivas o no efectivas, según el progreso del Lead.\n-   **Capacitación ERP**: Reuniones en las que se capacita al Lead sobre el uso del sistema.\n-   **Seguimiento por WhatsApp (WSP)**: Comunicación adicional para continuar el seguimiento.\n-   **Video WhatsApp**: Seguimiento o capacitación a través de video.\n\n```{python}\nint_columns_exp = [\n    'Total_Actividades_y', \n    'Total_Llamadas_y', \n    'Llamadas_Efectivas_y', \n    'Llamadas_No_Efectivas_y', \n    'WA_Seguimiento_y', \n    'Total_Reuniones_y', \n    'Reuniones_Hechas_y', \n    'Reuniones_Canceladas_y'\n]\nfloat_columns_exp = [\n    'Tiempo Fecha de ganado_y-Kick Off 1 (hr)', \n    'Tiempo Kick Off 1-Capacitación ERP 1 (hr)', \n    'Tiempo Fecha de ganado_y-Fecha de perdido (días)'\n]\n```\n\n```{python}\ndf[int_columns_exp].describe().T\n```\n\nSe puede observar \n\n```{python}\nfig = px.histogram(\n    df, \n    x='Total_Actividades_y',\n    title=f'Distribución del Total de Actividades',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 57 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Actividades',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Total_Llamadas_y',\n    title=f'Distribución del Total de Llamadas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins= 25\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_No_Efectivas_y',\n    title=f'Distribución de Llamadas No Efectivas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 25 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_Efectivas_y',\n    title=f'Distribución de Llamadas Efectivas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    #nbins=25\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'WA_Seguimiento_y',\n    title=f'Distribución de Seguimiento por WA',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 22 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Mensajes',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Total_Reuniones_y',\n    title=f'Distribución de Total Reuniones R1 - R2',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 15 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Reuniones_Hechas_y',\n    title=f'Distribución de Reuniones Hechas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'] \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Reuniones_Canceladas_y',\n    title=f'Distribución de Reuniones Canceladas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'] \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n\n```{python}\ndf\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```{python}\n#| include: false\n# count leads per 'Tipo Primera Reunión'\ndef graphic_primer_reunion(df):\n    count_leads = df.groupby('Tipo Primera Reunión_x')['org_id.value'].nunique().reset_index(name='Cantidad de Leads')\n    count_leads['Porcentaje'] = (count_leads['Cantidad de Leads'] / count_leads['Cantidad de Leads'].sum()) * 100\n\n    max_value = count_leads['Cantidad de Leads'].max()\n\n    count_leads['color'] = count_leads['Cantidad de Leads'].apply(\n        lambda x: 'highlight' if x == max_value else 'gray'\n    )\n\n    custom_colors = {\n        'highlight': 'rgba(175, 76, 76, 0.9)',\n        'gray': 'rgba(189, 189, 189, 0.7)'\n    }\n    fig = px.bar(\n        count_leads, \n        x='Tipo Primera Reunión_x', \n        y='Cantidad de Leads', \n        title='Cantidad de Leads segun Tipo de KickOff Experiencia', \n        color='color',\n        text=count_leads['Porcentaje'].round(2).astype(str) + '%',\n        color_discrete_map=custom_colors\n    )\n\n    fig.update_layout(\n        template=\"plotly_white\", \n        width=700, \n        height=500, \n        showlegend=False,\n        #xaxis={'categoryorder': 'total descending'}\n    )\n\n    fig.show()\n```\n\nDel total de Leads ganados, solo el 40% cuentan con un primer seguimiento categorizado como llamada de seguimiento efectiva, no efectiva o llamada sin avance. Estas actividades corresponden al seguimiento del Lead después de haber logrado un primer contacto efectivo y agendado una primera reunión, categorizada como R1. El objetivo de la llamada es recordar al Lead la reunión agendada. Del total de Leads que cuentan con esta informacion, el 75% ha tenido una primera llamada de seguimiento efectiva. un porcentaje importante 20.83% representa llamadas de seguimiento no efectivas y un 4.17% sin avance\n\n```{python}\ndef graphic_segunda_reunion(df):\n    count_leads = df.groupby('Tipo Segunda Reunión')['org_id.value'].nunique().reset_index(name='Cantidad de Leads')\n    count_leads['Porcentaje'] = (count_leads['Cantidad de Leads'] / count_leads['Cantidad de Leads'].sum()) * 100\n\n    max_value = count_leads['Cantidad de Leads'].max()\n\n    count_leads['color'] = count_leads['Cantidad de Leads'].apply(\n        lambda x: 'highlight' if x == max_value else 'gray'\n    )\n\n    custom_colors = {\n        'highlight': 'rgba(175, 76, 76, 0.9)',\n        'gray': 'rgba(189, 189, 189, 0.7)'\n    }\n    fig = px.bar(\n        count_leads, \n        x='Tipo Segunda Reunión', \n        y='Cantidad de Leads', \n        title='Cantidad de Leads segun Tipo de KickOff Experiencia', \n        color='color',\n        text=count_leads['Porcentaje'].round(2).astype(str) + '%',\n        color_discrete_map=custom_colors\n    )\n\n    fig.update_layout(\n        template=\"plotly_white\", \n        width=700, \n        height=500, \n        showlegend=False,\n        #xaxis={'categoryorder': 'total descending'}\n    )\n\n    fig.show()\n```\n\nDel total de Leads de los que se cuenta el total de información de comportamiento de contacto solo el 78% de ellos cuenta con una segunda reunion realizada y  \n\n```{python}\n#| include: false\n# count leads per 'Churn Status'\ndef graphic_churn_status(df):\n    count_leads = df.groupby('Churn Status')['org_id.value'].nunique().reset_index(name='Cantidad de Leads')\n    count_leads['Porcentaje'] = (count_leads['Cantidad de Leads'] / count_leads['Cantidad de Leads'].sum()) * 100\n\n    max_value = count_leads['Cantidad de Leads'].max()\n\n    count_leads['color'] = count_leads['Cantidad de Leads'].apply(\n        lambda x: 'highlight' if x == max_value else 'gray'\n    )\n\n    custom_colors = {\n    'highlight': 'rgba(175, 76, 76, 0.9)',\n    'gray': 'rgba(189, 189, 189, 0.7)'\n    }\n\n    fig = px.bar(\n        count_leads, \n        x='Churn Status', \n        y='Cantidad de Leads', \n        title='Cantidad de Leads por Churn Status', \n        color='color',\n        text=count_leads['Porcentaje'].round(2).astype(str) + '%',\n        color_discrete_map=custom_colors\n    )\n\n    fig.update_layout(\n        template=\"plotly_white\", \n        width=700, \n        height=500, \n        showlegend=False,\n        xaxis={'categoryorder': 'total descending'}\n    )\n\n    fig.show()\n```\n\n```{python}\n# dropdown to select value\ndropdown = widgets.Dropdown(\n    options=[\n        'Leads por Origen', \n        'Leads por Tipo de cliente', \n        'Leads por Canal Agrupado',\n        'Leads por ¿Quien toma la decisión de compra?',\n        'Leads por Nivel de urgencia',\n        ''\n\n    ],\n    value='Leads por Origen',  # defect value\n    description='Selecciona gráfico:',\n)\n\n# Función para manejar la selección\ndef mostrar_grafica(opcion):\n    if opcion == 'Leads por Origen':\n        graphic_origen(df)\n    elif opcion == 'Leads por Tipo de cliente':\n        graphic_tipo_cliente(df)\n    else:\n        graphic_canal_agrupado(df)\n\n# Conectar la función con el dropdown\nwidgets.interactive(mostrar_grafica, opcion=dropdown)\n\ndisplay(dropdown)\n\n```\n\n### Selecciona el gráfico\n\nPor favor, selecciona el tipo de gráfico que deseas visualizar desde el menú desplegable a continuación. Esto te permitirá comparar las cantidades de Leads por diferentes categorías como el origen, tipo de cliente o canal agrupado.\n","srcMarkdownNoYaml":"\n\n```{python}\n#| include: false\nimport os\nimport pandas as pd\nfrom datetime import datetime, timedelta\nimport plotly.express as px\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport ipywidgets as widgets\nfrom IPython.display import display\nimport plotly.graph_objects as go\n```\n\n```{python}\n#| include: false\npastel_colors = [\n    'rgba(17, 98, 218, 0.76)', \n    'rgba(250, 120, 180, 0.9)', \n    'rgba(100, 200, 150, 0.9)',\n    'rgba(250, 250, 150, 0.9)',\n    'rgba(240, 150, 120, 0.9)'\n]\n\n```\n\n```{python}\n#| include: false\n# import CSV to DataFrame\ndf_com = pd.read_csv(r'..\\data\\output_silver\\contact_metrics_com.csv')\ndf_exp = pd.read_csv(r'..\\data\\output_silver\\contact_metrics_exp.csv')\ndf = pd.read_csv(r'..\\data\\output_silver\\contact_metrics.csv')\n```\n\nSe plantea la hipótesis de que los patrones de contacto durante la etapa comercial podrían ser indicadores clave para predecir el \"Churn Comercial\" observado en la etapa de Experiencia.\n\nPara analizar esta idea, se ha examinado la información histórica de las actividades asociadas a todos los negocios ganados en la etapa comercial.\n\n## Datos Utilizados\n\nSe han utilizado los siguientes datos obtenidos del CRM Pipedrive:\\\n- Embudo Comercial: todas las actividades y todos los deals creados a partir de Enero del 2021 a la fecha, solo se consideraron los datos del embudo de Leads Calientes y en Estado 'Ganado'.\\\n- Embudo Experiencia: todas las actividades y todos los deals creados a partir de Enero del 2021 a la fecha, se consideraron los embudos 'Experiencia' y 'Churn'.\\\n\\\n**A partir de abril de 2024, se empezaron a considerar las etapas R1 y R2 en lugar de una única etapa denominada \"Reunión\". Cabe destacar que, para el periodo comprendido entre enero de 2021 y abril de 2024, la etapa única \"Reunión\" fue asociada retrospectivamente a la etapa R2.**\n\n## Caracteristicas de los Leads Ganados\n\n```{python}\n#| include: false\nint_columns_com = [\n    'Total_Actividades_x', \n    'Total_Llamadas_x', \n    'Llamadas_Sin_Avance', \n    'Llamadas_Efectivas_x', \n    'Llamadas_No_Efectivas_x', \n    'WA_Seguimiento_x', \n    'Total_Reuniones_x', \n    'Reuniones_Hechas_x', \n    'Reuniones_Canceladas_x', \n    #'New Categories'\n]\n\n\nfloat_columns_com = [\n    'Tiempo Negocio creado el-Primer Contacto (min)', \n    'Tiempo Negocio creado el-Fecha de ganado (días)', \n    'Tiempo Primer Contacto-Fecha de ganado (días)', \n    'Tiempo Primer Contacto-R1 1 (hr)', \n    'Tiempo R1 1-Segunda Reunión (días)'\n]\n\n```\n\n## Caracteristicas de las Actividades: Etapa Comercial\n\n#### Contexto\n\nLas acciones dentro de la Embudo Comercial corresponden a la siguiente lista de Etapas y Actividades:\\\n**R1:** Primera Reunión (siempre son de manera online, pueden ser Canceladas)\\\n**R2:** Segunda Reunión (pueden ser: in (insitu), out (fuera de oficinas), online)\\\n**Seguimiento**\\\n**Cierre**\\\nLas actividades entre Etapas comprenden las siguientes:\\\n**Llamadas de Prospeccion:** se considera el primero contacto Efectivas y No Efectivas\\\n**Llamadas de Seguimiento:** pueden ser Efectivas y No Efectivas\\\n**Llamadas Sin Avance** pueden ser contestadas o no, son llamadas de las que no se ha obtenido informacion de valor **Seguimiento wsp**  **video wsp**\\\n\n\n```{python}\ndf[int_columns_com].describe().T\n```\n\nSe puede observar \n\n```{python}\nfig = px.histogram(\n    df, \n    x='Total_Actividades_x',\n    title=f'Distribución del Total de Actividades',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 35 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Actividades',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n\n```\n\nLa mayoría de las actividades realizadas con los Leads ganados oscila entre 6 y 11, lo que sugiere que, en promedio, un Lead suele convertirse en \"ganado\" tras completar al menos 6 actividades, que incluyen llamadas, reuniones y seguimientos por WhatsApp.\n\nLa distribución presenta un sesgo positivo, indicando que la conversión generalmente ocurre entre 0 y 17 actividades. Aunque en algunos casos se requieran más interacciones, estos son menos frecuentes.\n\n```{python}\nfig = px.histogram(\n    df, \n    x='Total_Llamadas_x',\n    title=f'Distribución del Total de Llamadas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 25 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Actividades',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nLa mayoría de las Llamadas realizadas, con los Leads ganados oscila entre 2 y 3 llamadas, lo que sugiere que, en promedio, un Lead suele convertirse en \"ganado\" tras completar al menos 2 llamadas, ya sean de prospeccion o de seguimiento a lo largo de todo el proceso en la etapa comercial. \n\nLa distribución presenta un sesgo positivo, indicando que la conversión generalmente ocurre entre 0 y 15 actividades. Aunque en algunos casos se requieran más llamadas.\n\n__Esta visualizacion incluye el total de actividades categorizadas como llamadas ya sean efectivas o no.__\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_Sin_Avance',\n    title=f'Distribución de Llamadas Sin Avance',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)']\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nLa categoría de llamadas sin avance representa una proporción muy baja en los datos, lo que sugiere que no se utiliza con frecuencia al registrar información en el CRM. Esto podría deberse a la dificultad de diferenciar entre una llamada sin avance y una no efectiva, por lo que sería conveniente considerar ambas como llamadas no efectivas.\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_Efectivas_x',\n    title=f'Distribución de Llamadas Efectivas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins=25\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n\n```\n\nLa mayoría de las llamadas efectivas realizadas con los Leads ganados oscilan entre 1 y 4 llamadas, lo que sugiere que un Lead tiene mayores probabilidades de convertirse en \"ganado\" tras completar al menos 1 llamada efectiva, ya sea de prospección o de seguimiento a lo largo de todo el proceso en la etapa comercial.\n\nLa distribución presenta un sesgo positivo, indicando que la conversión generalmente ocurre con entre 1 y 4 llamadas efectivas. Aunque en algunos casos se requieren más llamadas, la tendencia general es que un Lead ganado no necesite muchas Llamadas efectivas para poder concretarse como 'ganado'.\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_No_Efectivas_x',\n    title=f'Distribución de Llamadas No Efectivas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 40 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nLa mayoría de las llamadas no efectivas realizadas con los Leads ganados oscilan entre 0 y 1 llamada, lo que sugiere que un Lead 'ganado' rara vez tiene llamadas no efectivas, ya sea de prospección o de seguimiento, a lo largo de todo el proceso en la etapa comercial. Sin embargo, existen casos excepcionales en los que es necesario realizar una \"persecución\" de los Leads para poder convertirlos.\n\nLa distribución presenta un sesgo positivo, lo que indica que la conversión generalmente ocurre con 1 o ninguna llamada no efectiva. Aunque en algunos casos se presentan más llamadas no efectivas, la tendencia general es que un Lead ganado no requiera muchas interacciones fallidas para convertirse en una venta.\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'WA_Seguimiento_x',\n    title=f'Distribución de Seguimiento por WA',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 24\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Mensajes',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nSe observa que los seguimientos realizados por WhatsApp oscilan entre 2 y 5 interacciones, lo que nos muestra que se necesitan al menos 2 seguimientos por whats app a lo largo de todo el proceso en la etapa comercial para poder tener mas oportunidades de considerarlo como ganado.\n\nLa distribución presenta un sesgo positivo, indicando que la conversión generalmente ocurre con entre 2 y 5 interacciones por whatsapp. Aunque en algunos casos se requieren más interacciones, la tendencia general es que un Lead ganado no necesite muchas interacciones por whats app para poder concretarse como 'ganado'.\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Total_Reuniones_x',\n    title=f'Distribución de Total Reuniones R1 - R2',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 10 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Reuniones_Hechas_x',\n    title=f'Distribución de Reuniones Hechas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    #nbins=15 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\nLa mayoría de las reuniones marcadas como hechas con los Leads ganados oscilan entre 1 y 2 reuniones, lo que sugiere que un Lead tiene mayores oportunidades de convertirse en \"ganado\" tras completar hasta 2 reuniónes durante el proceso comercial. \nEsto puede deberse a la nueva clasificacion de actividades dentro ed la etapa comercial, dividida entre R1 y R2, lo que hace que exista una tendencia de buscar las 2 reuniones hechas.\n\nSin embargo, se observa una cantidad considerable de casos en los que los Leads han sido considerados como ganados sin la necesidad de haber realizado ninguna reunión en la etapa comercial.\n\nLa distribución muestra un sesgo negativo, indicando que la conversión generalmente ocurre con entre 0 y 2 reuniones hechas. Aunque existen casos excepcionales en los que se han realizado hasta 3 reuniones, la tendencia general es que un Lead ganado no requiere mas de 2 reuniones para ser 'ganado'.\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Reuniones_Canceladas_x',\n    title=f'Distribución de Reuniones Canceladas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'] \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\nLa mayoria de Leads ganados no cancela las reuniones que tiene agendadas, marcando 0 reuniones canceladas la mayoria de ocurrencias, \n\nLa distribución muestra un sesgo negativo muy marcado, indicando que la conversión generalmente ocurre con 0 reuniones Reuniones Canceladas. Aunque existen casos excepcionales en los que se han cancelado de 1 a 2 reuniones, la tendencia general es que un Lead ganado en su mayoria no cancela las reuniones para convertirse a 'ganado'.\n\n## Caracteristicas de las Actividades: Etapa Experiencia\n\n#### Contexto\n\nLas acciones dentro del **Embudo de Experiencia** corresponden a las siguientes **Etapas** y **Actividades**:\n\n### Etapas:\n\n-   **Contacto Inicial**: Primer contacto con el Lead Ganado, usualmente en una reunión de **Kick Off**.\n-   **Onboarding**: Etapa en la que el Lead recibe capacitación sobre el uso del sistema.\n-   **Sin Adopción**: Cuando el Lead aún no ha adoptado el uso del sistema.\n-   **Adopción**: Cuando el Lead ha comenzado a usar el sistema de manera efectiva.\n\n### Actividades entre Etapas:\n\n-   **Kick Off**: Primer contacto con el Lead ganado, generalmente realizado de manera online (puede ser cancelado).\n-   **Llamadas de Seguimiento**: Pueden ser efectivas o no efectivas, según el progreso del Lead.\n-   **Capacitación ERP**: Reuniones en las que se capacita al Lead sobre el uso del sistema.\n-   **Seguimiento por WhatsApp (WSP)**: Comunicación adicional para continuar el seguimiento.\n-   **Video WhatsApp**: Seguimiento o capacitación a través de video.\n\n```{python}\nint_columns_exp = [\n    'Total_Actividades_y', \n    'Total_Llamadas_y', \n    'Llamadas_Efectivas_y', \n    'Llamadas_No_Efectivas_y', \n    'WA_Seguimiento_y', \n    'Total_Reuniones_y', \n    'Reuniones_Hechas_y', \n    'Reuniones_Canceladas_y'\n]\nfloat_columns_exp = [\n    'Tiempo Fecha de ganado_y-Kick Off 1 (hr)', \n    'Tiempo Kick Off 1-Capacitación ERP 1 (hr)', \n    'Tiempo Fecha de ganado_y-Fecha de perdido (días)'\n]\n```\n\n```{python}\ndf[int_columns_exp].describe().T\n```\n\nSe puede observar \n\n```{python}\nfig = px.histogram(\n    df, \n    x='Total_Actividades_y',\n    title=f'Distribución del Total de Actividades',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 57 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Actividades',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Total_Llamadas_y',\n    title=f'Distribución del Total de Llamadas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins= 25\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_No_Efectivas_y',\n    title=f'Distribución de Llamadas No Efectivas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 25 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x='Llamadas_Efectivas_y',\n    title=f'Distribución de Llamadas Efectivas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    #nbins=25\n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Llamadas',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'WA_Seguimiento_y',\n    title=f'Distribución de Seguimiento por WA',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 22 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Mensajes',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Total_Reuniones_y',\n    title=f'Distribución de Total Reuniones R1 - R2',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'],\n    nbins = 15 \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Reuniones_Hechas_y',\n    title=f'Distribución de Reuniones Hechas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'] \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n```{python}\nfig = px.histogram(\n    df,\n    x= 'Reuniones_Canceladas_y',\n    title=f'Distribución de Reuniones Canceladas',\n    template=\"plotly_white\",\n    color_discrete_sequence=['rgba(17, 100, 250, 0.65)'] \n)\n\nfig.update_layout(\n    #width=800, \n    #height=500,\n    xaxis_title='Reuniones',  \n    yaxis_title='Frecuencia',\n    title_x=0.5\n)\n\nfig.show()\n```\n\n\n```{python}\ndf\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```{python}\n#| include: false\n# count leads per 'Tipo Primera Reunión'\ndef graphic_primer_reunion(df):\n    count_leads = df.groupby('Tipo Primera Reunión_x')['org_id.value'].nunique().reset_index(name='Cantidad de Leads')\n    count_leads['Porcentaje'] = (count_leads['Cantidad de Leads'] / count_leads['Cantidad de Leads'].sum()) * 100\n\n    max_value = count_leads['Cantidad de Leads'].max()\n\n    count_leads['color'] = count_leads['Cantidad de Leads'].apply(\n        lambda x: 'highlight' if x == max_value else 'gray'\n    )\n\n    custom_colors = {\n        'highlight': 'rgba(175, 76, 76, 0.9)',\n        'gray': 'rgba(189, 189, 189, 0.7)'\n    }\n    fig = px.bar(\n        count_leads, \n        x='Tipo Primera Reunión_x', \n        y='Cantidad de Leads', \n        title='Cantidad de Leads segun Tipo de KickOff Experiencia', \n        color='color',\n        text=count_leads['Porcentaje'].round(2).astype(str) + '%',\n        color_discrete_map=custom_colors\n    )\n\n    fig.update_layout(\n        template=\"plotly_white\", \n        width=700, \n        height=500, \n        showlegend=False,\n        #xaxis={'categoryorder': 'total descending'}\n    )\n\n    fig.show()\n```\n\nDel total de Leads ganados, solo el 40% cuentan con un primer seguimiento categorizado como llamada de seguimiento efectiva, no efectiva o llamada sin avance. Estas actividades corresponden al seguimiento del Lead después de haber logrado un primer contacto efectivo y agendado una primera reunión, categorizada como R1. El objetivo de la llamada es recordar al Lead la reunión agendada. Del total de Leads que cuentan con esta informacion, el 75% ha tenido una primera llamada de seguimiento efectiva. un porcentaje importante 20.83% representa llamadas de seguimiento no efectivas y un 4.17% sin avance\n\n```{python}\ndef graphic_segunda_reunion(df):\n    count_leads = df.groupby('Tipo Segunda Reunión')['org_id.value'].nunique().reset_index(name='Cantidad de Leads')\n    count_leads['Porcentaje'] = (count_leads['Cantidad de Leads'] / count_leads['Cantidad de Leads'].sum()) * 100\n\n    max_value = count_leads['Cantidad de Leads'].max()\n\n    count_leads['color'] = count_leads['Cantidad de Leads'].apply(\n        lambda x: 'highlight' if x == max_value else 'gray'\n    )\n\n    custom_colors = {\n        'highlight': 'rgba(175, 76, 76, 0.9)',\n        'gray': 'rgba(189, 189, 189, 0.7)'\n    }\n    fig = px.bar(\n        count_leads, \n        x='Tipo Segunda Reunión', \n        y='Cantidad de Leads', \n        title='Cantidad de Leads segun Tipo de KickOff Experiencia', \n        color='color',\n        text=count_leads['Porcentaje'].round(2).astype(str) + '%',\n        color_discrete_map=custom_colors\n    )\n\n    fig.update_layout(\n        template=\"plotly_white\", \n        width=700, \n        height=500, \n        showlegend=False,\n        #xaxis={'categoryorder': 'total descending'}\n    )\n\n    fig.show()\n```\n\nDel total de Leads de los que se cuenta el total de información de comportamiento de contacto solo el 78% de ellos cuenta con una segunda reunion realizada y  \n\n```{python}\n#| include: false\n# count leads per 'Churn Status'\ndef graphic_churn_status(df):\n    count_leads = df.groupby('Churn Status')['org_id.value'].nunique().reset_index(name='Cantidad de Leads')\n    count_leads['Porcentaje'] = (count_leads['Cantidad de Leads'] / count_leads['Cantidad de Leads'].sum()) * 100\n\n    max_value = count_leads['Cantidad de Leads'].max()\n\n    count_leads['color'] = count_leads['Cantidad de Leads'].apply(\n        lambda x: 'highlight' if x == max_value else 'gray'\n    )\n\n    custom_colors = {\n    'highlight': 'rgba(175, 76, 76, 0.9)',\n    'gray': 'rgba(189, 189, 189, 0.7)'\n    }\n\n    fig = px.bar(\n        count_leads, \n        x='Churn Status', \n        y='Cantidad de Leads', \n        title='Cantidad de Leads por Churn Status', \n        color='color',\n        text=count_leads['Porcentaje'].round(2).astype(str) + '%',\n        color_discrete_map=custom_colors\n    )\n\n    fig.update_layout(\n        template=\"plotly_white\", \n        width=700, \n        height=500, \n        showlegend=False,\n        xaxis={'categoryorder': 'total descending'}\n    )\n\n    fig.show()\n```\n\n```{python}\n# dropdown to select value\ndropdown = widgets.Dropdown(\n    options=[\n        'Leads por Origen', \n        'Leads por Tipo de cliente', \n        'Leads por Canal Agrupado',\n        'Leads por ¿Quien toma la decisión de compra?',\n        'Leads por Nivel de urgencia',\n        ''\n\n    ],\n    value='Leads por Origen',  # defect value\n    description='Selecciona gráfico:',\n)\n\n# Función para manejar la selección\ndef mostrar_grafica(opcion):\n    if opcion == 'Leads por Origen':\n        graphic_origen(df)\n    elif opcion == 'Leads por Tipo de cliente':\n        graphic_tipo_cliente(df)\n    else:\n        graphic_canal_agrupado(df)\n\n# Conectar la función con el dropdown\nwidgets.interactive(mostrar_grafica, opcion=dropdown)\n\ndisplay(dropdown)\n\n```\n\n### Selecciona el gráfico\n\nPor favor, selecciona el tipo de gráfico que deseas visualizar desde el menú desplegable a continuación. Esto te permitirá comparar las cantidades de Leads por diferentes categorías como el origen, tipo de cliente o canal agrupado.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"kable","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","self-contained":true,"embed-resources":true,"output-file":"EDA contactabilidad 2.html"},"language":{"toc-title-document":"Tabla de contenidos","toc-title-website":"En esta página","related-formats-title":"Otros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fuente","other-links-title":"Otros Enlaces","code-links-title":"Enlaces de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Cuaderno de Artículo","notebook-preview-download":"Descargar Cuaderno","notebook-preview-download-src":"Descargar código fuente","notebook-preview-back":"Volver al Artículo","manuscript-meca-bundle":"Archivo MECA","section-title-abstract":"Resumen","section-title-appendices":"Apéndices","section-title-footnotes":"Notas","section-title-references":"Referencias","section-title-reuse":"Reutilización","section-title-copyright":"Derechos de autor","section-title-citation":"Cómo citar","appendix-attribution-cite-as":"Por favor, cita este trabajo como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licencia","title-block-author-single":"Autor/a","title-block-author-plural":"Autores/as","title-block-affiliation-single":"Afiliación","title-block-affiliation-plural":"Afiliaciones","title-block-published":"Fecha de publicación","title-block-modified":"Fecha de modificación","title-block-keywords":"Palabras clave","callout-tip-title":"Tip","callout-note-title":"Nota","callout-warning-title":"Advertencia","callout-important-title":"Importante","callout-caution-title":"Precaución","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar todo el código","code-tools-hide-all-code":"Ocultar todo el código","code-tools-view-source":"Ver el código fuente","code-tools-source-code":"Ejecutar el código","tools-share":"Compartir","tools-download":"Descargar","code-line":"Línea","code-lines":"Líneas","copy-button-tooltip":"Copiar al portapapeles","copy-button-tooltip-success":"Copiado","repo-action-links-edit":"Editar esta página","repo-action-links-source":"Ver el código","repo-action-links-issue":"Informar de un problema","back-to-top":"Volver arriba","search-no-results-text":"Sin resultados","search-matching-documents-text":"documentos encontrados","search-copy-link-title":"Copiar el enlace en la búsqueda","search-hide-matches-text":"Ocultar resultados adicionales","search-more-match-text":"resultado adicional en este documento","search-more-matches-text":"resultados adicionales en este documento","search-clear-button-title":"Borrar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Buscar","toggle-section":"Alternar sección","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo oscuro","toggle-reader-mode":"Alternar modo lector","toggle-navigation":"Navegación de palanca","crossref-fig-title":"Figura","crossref-tbl-title":"Tabla","crossref-lst-title":"Listado","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolario","crossref-prp-title":"Proposición","crossref-cnj-title":"Conjetura","crossref-def-title":"Definición","crossref-exm-title":"Ejemplo","crossref-exr-title":"Ejercicio","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apéndice","crossref-sec-prefix":"Sección","crossref-eq-prefix":"Ecuación","crossref-lof-title":"Listado de Figuras","crossref-lot-title":"Listado de Tablas","crossref-lol-title":"Listado de Listados","environment-proof-title":"Prueba","environment-remark-title":"Observación","environment-solution-title":"Solución","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Por defecto","listing-page-order-by-date-asc":"Menos reciente","listing-page-order-by-date-desc":"Más reciente","listing-page-order-by-number-desc":"De mayor a menor","listing-page-order-by-number-asc":"De menor a mayor","listing-page-field-date":"Fecha","listing-page-field-title":"Título","listing-page-field-description":"Descripción","listing-page-field-author":"Autor/a","listing-page-field-filename":"Nombre de archivo","listing-page-field-filemodified":"Fecha de modificación","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tiempo de lectura","listing-page-field-wordcount":"Conteo de Palabras","listing-page-field-categories":"Categorías","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Todas","listing-page-no-matches":"No hay resultados","listing-page-words":"{0} palabras","listing-page-filter":"Filtro","draft":"Borrador"},"metadata":{"lang":"es","fig-responsive":true,"quarto-version":"1.5.57","title":"ANÁLISIS: 'Relacion entre factores de contactabilidad y 'Churn Comercial'","author":"Flavia Davila","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}